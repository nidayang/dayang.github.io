(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{272:function(t,a,s){"use strict";s.r(a);var r=s(13),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"创建型设计模式之原型模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建型设计模式之原型模式"}},[t._v("#")]),t._v(" 创建型设计模式之原型模式")]),t._v(" "),a("h2",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("p",[t._v("原型模式允许通过复制现有的实例来创建新的实例。在 java 中，通常通过"),a("strong",[t._v("clone()方法和反序列化")]),t._v("来实现。")]),t._v(" "),a("h2",{attrs:{id:"优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),a("p",[t._v("优点")]),t._v(" "),a("ul",[a("li",[t._v("向客户隐藏建造新实例的复杂性")]),t._v(" "),a("li",[t._v("提供让客户产生未知类型对象的选项")]),t._v(" "),a("li",[t._v("在某些环境下，复制对象比创建对象更有效")])]),t._v(" "),a("p",[t._v("缺点")]),t._v(" "),a("ul",[a("li",[t._v("对象的复制有时候相当复杂且效率低")])]),t._v(" "),a("h2",{attrs:{id:"使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),a("p",[t._v("在一个复杂的类的层次中，当系统必须从其中的许多类型创建新的对象是，可以考虑原型。")])])}),[],!1,null,null,null);a.default=v.exports}}]);